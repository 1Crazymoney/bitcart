# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  test-3.6: &test-template
    docker:
      - image: circleci/python:3.6
      - image: circleci/redis:latest
      - image: circleci/postgres:9-alpine-ram
    environment:
      TEST: true
      POSTGRES_DB: bitcart_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123@

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v4-dependencies-{{ checksum "requirements/web.txt" }}-{{ checksum "requirements/test.txt" }}-{{ checksum "requirements/daemons/btc.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v4-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            sudo apt install libsecp256k1-dev
            pip install -U -r requirements.txt
            pip install -U -r requirements/daemons/btc.txt
            pip install -U -r requirements/test.txt

      - save_cache:
          paths:
            - ./venv
          key: v4-dependencies-{{ checksum "requirements/web.txt" }}-{{ checksum "requirements/test.txt" }}-{{ checksum "requirements/daemons/btc.txt" }}

      - run:
          name: prepare daemon
          command: |
            . venv/bin/activate
            BTC_DEBUG=true BTC_NETWORK=testnet python3 daemons/btc.py
          background: true

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            alembic upgrade head
            sleep 5s
            pytest --cov=.
            codecov

      - store_artifacts:
          path: test-reports
          destination: test-reports

  test-3.7:
    <<: *test-template
    docker:
      - image: circleci/python:3.7
      - image: circleci/redis:latest
      - image: circleci/postgres:9-alpine-ram
    <<: *test-template

  deploy:
    docker:
      - image: circleci/python:3.6.8
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: set up build environment
          command: |
            git clone https://github.com/MrNaif2018/bitcart-docker
            cd bitcart-docker
            ./dev-setup.sh $CIRCLE_BRANCH
      - setup_remote_docker
      - run:
          path: ~/repo/bitcart-docker
          name: build docker image
          command: |
            cd compose
            docker build -t mrnaif/bitcart:latest -f backend.Dockerfile .
            docker login --username=$DOCKER_USER --password=$DOCKER_PASS
            docker push mrnaif/bitcart:latest
      - run:
          path: ~/repo/bitcart-docker
          name: build btc daemon
          command: |
            cd compose
            docker build -t mrnaif/bitcart-btc:latest -f btc.Dockerfile .
            docker login --username=$DOCKER_USER --password=$DOCKER_PASS
            docker push mrnaif/bitcart-btc:latest

      - run:
          path: ~/repo/bitcart-docker
          name: build bch daemon
          command: |
            cd compose
            docker build -t mrnaif/bitcart-bch:latest -f bch.Dockerfile . || true
            docker login --username=$DOCKER_USER --password=$DOCKER_PASS
            docker push mrnaif/bitcart-bch:latest || true

      - run:
          path: ~/repo/bitcart-docker
          name: build ltc daemon
          command: |
            cd compose
            docker build -t mrnaif/bitcart-ltc:latest -f ltc.Dockerfile .
            docker login --username=$DOCKER_USER --password=$DOCKER_PASS
            docker push mrnaif/bitcart-ltc:latest

      - run:
          path: ~/repo/bitcart-docker
          name: build gzro daemon
          command: |
            cd compose
            docker build -t mrnaif/bitcart-gzro:latest -f gzro.Dockerfile .
            docker login --username=$DOCKER_USER --password=$DOCKER_PASS
            docker push mrnaif/bitcart-gzro:latest

      - run:
          path: ~/repo/bitcart-docker
          name: build bsty daemon
          command: |
            cd compose
            docker build -t mrnaif/bitcart-bsty:latest -f bsty.Dockerfile .
            docker login --username=$DOCKER_USER --password=$DOCKER_PASS
            docker push mrnaif/bitcart-bsty:latest

  deploy_stable:
    docker:
      - image: circleci/python:3.6.8
    working_directory: ~/repo
    steps:
      - setup_remote_docker
      - run:
          name: retag and upload
          command: |
            docker login --username=$DOCKER_USER --password=$DOCKER_PASS
            docker pull mrnaif/bitcart:latest
            docker pull mrnaif/bitcart-btc:latest
            docker pull mrnaif/bitcart-bch:latest
            docker pull mrnaif/bitcart-ltc:latest
            docker pull mrnaif/bitcart-gzro:latest
            docker pull mrnaif/bitcart-bsty:latest
            docker tag mrnaif/bitcart:latest mrnaif/bitcart:stable
            docker tag mrnaif/bitcart-btc:latest mrnaif/bitcart-btc:stable
            docker tag mrnaif/bitcart-bch:latest mrnaif/bitcart-bch:stable
            docker tag mrnaif/bitcart-ltc:latest mrnaif/bitcart-ltc:stable
            docker tag mrnaif/bitcart-gzro:latest mrnaif/bitcart-gzro:stable
            docker tag mrnaif/bitcart-bsty:latest mrnaif/bitcart-bsty:stable
            docker push mrnaif/bitcart:stable
            docker push mrnaif/bitcart-btc:stable
            docker push mrnaif/bitcart-bch:stable
            docker push mrnaif/bitcart-ltc:stable
            docker push mrnaif/bitcart-gzro:stable
            docker push mrnaif/bitcart-bsty:stable

workflows:
  version: 2
  build_and_test:
    jobs:
      - test-3.6:
          context: global
      - test-3.7:
          context: global
      - deploy:
          context: global
          requires:
            - test-3.6
            - test-3.7
          filters:
            branches:
              only: master
      - deploy_stable:
          context: global
          requires:
            - deploy
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[1-9]+(\.[0-9]+)*/
