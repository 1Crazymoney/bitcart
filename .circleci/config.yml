# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  test-3.6: &test-template
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6
        environment:
          TEST: true

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/redis:latest
      - image: circleci/postgres:9-alpine-ram
        environment:
          POSTGRES_DB: bitcart_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123@

    working_directory: ~/repo

    environment: 
      PYTHONWARNINGS: DeprecationWarning

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "requirements/web.txt" }}-{{ checksum "requirements/test.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install -r requirements/test.txt
            pip install -r requirements/daemons/btc.txt

      - save_cache:
          paths:
            - ./venv
          key: v2-dependencies-{{ checksum "requirements/web.txt" }}-{{ checksum "requirements/test.txt" }}

      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0

      - run:
          name: prepare daemon
          command: BTC_TESTNET=true python3 daemons/btc.py
        
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5000 -timeout 1m

      

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest --cov=.
            coveralls

      - store_artifacts:
          path: test-reports
          destination: test-reports

  test-3.7:
    <<: *test-template
    docker:
      - image: circleci/python:3.7
        environment:
          TEST: true
      - image: circleci/redis:latest
      - image: circleci/postgres:9-alpine-ram
        environment:
          POSTGRES_DB: bitcart_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123@
    <<: *test-template

  test-3.8:
    <<: *test-template
    docker:
      - image: circleci/python:3.8.0b2-buster-node-browsers-legacy
        environment:
          TEST: true
      - image: circleci/redis:latest
      - image: circleci/postgres:9-alpine-ram
        environment:
          POSTGRES_DB: bitcart_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123@
    

  deploy:
    docker: 
      - image: circleci/python:3.6.8
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: set up build environment
          command: |
            git clone https://github.com/MrNaif2018/bitcart-docker
            cd bitcart-docker
            ./dev-setup.sh $CIRCLE_BRANCH
      - setup_remote_docker
      - run:
          path: ~/repo/bitcart-docker
          name: build docker image
          command: |
            cd compose
            docker build -t mrnaif/bitcart:latest -f backend.Dockerfile .
            docker login --username=$DOCKER_USER --password=$DOCKER_PASS
            docker push mrnaif/bitcart:latest
      - run:
          path: ~/repo/bitcart-docker
          name: build btc daemon
          command: |
            cd compose
            docker build -t mrnaif/bitcart-btc:latest -f btc.Dockerfile .
            docker login --username=$DOCKER_USER --password=$DOCKER_PASS
            docker push mrnaif/bitcart-btc:latest
      - run:
          path: ~/repo/bitcart-docker
          name: build ln daemon
          command: |
            cd compose
            docker build -t mrnaif/bitcart-ln:latest -f ln.Dockerfile .
            docker login --username=$DOCKER_USER --password=$DOCKER_PASS
            docker push mrnaif/bitcart-ln:latest

  deploy_stable:
    docker: 
      - image: circleci/python:3.6.8
    working_directory: ~/repo
    steps:
      - setup_remote_docker
      - run:
          name: retag and upload
          command: |
            docker login --username=$DOCKER_USER --password=$DOCKER_PASS
            docker pull mrnaif/bitcart:latest
            docker pull mrnaif/bitcart-btc:latest
            docker pull mrnaif/bitcart-ln:latest
            docker tag mrnaif/bitcart:latest mrnaif/bitcart:stable
            docker tag mrnaif/bitcart-btc:latest mrnaif/bitcart-btc:stable
            docker tag mrnaif/bitcart-ln:latest mrnaif/bitcart-ln:stable
            docker push mrnaif/bitcart:stable
            docker push mrnaif/bitcart-btc:stable
            docker push mrnaif/bitcart-ln:stable

workflows: 
  version: 2 
  build_and_test:
    jobs: 
      - test-3.6:
          context: global
      - test-3.7:
          context: global
      - test-3.8:
          context: global
      - deploy:
          context: global
          requires:
            - test-3.6
            - test-3.7
            - test-3.8
          filters:
            branches:
              only: master
      - deploy_stable:
          context: global
          requires:
            - deploy
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[1-9]+(\.[0-9]+)*/
          

